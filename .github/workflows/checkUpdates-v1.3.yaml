name: Check updates (v1.3)
on:
  schedule:
  - cron: "0 */24 * * *"
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release-v1.3
      - name: Install xmlstarlet
        run: sudo apt-get install xmlstarlet
      - name: Get the Docker image meta
        run: |
          echo "imageName=javister-docker-docker.bintray.io/javister/$(xmlstarlet sel -N p=http://maven.apache.org/POM/4.0.0 -t -v "/p:project/p:properties/p:docker.image.artifactId" pom.xml)" >> $GITHUB_ENV
          echo "imageTag=$(xmlstarlet sel -N p=http://maven.apache.org/POM/4.0.0 -t -v "/p:project/p:properties/p:revision" pom.xml)" >> $GITHUB_ENV
          echo "doRebuild=false" >> $GITHUB_ENV
          echo "oldImagePresent=false" >> $GITHUB_ENV

      - name: Pull old Docker image wildfly-8.2.1.krista22-jdk8
        run: |
          if docker pull ${imageName}:wildfly-8.2.1.krista22-jdk8-${imageTag}; then
              echo "oldImagePresent=true" >> $GITHUB_ENV
          else
              echo "doRebuild=true" >> $GITHUB_ENV
          fi
      - name: Check updates in image wildfly-8.2.1.krista22-jdk8
        if: env.oldImagePresent == 'true'
        run: |
          if [[ "$(docker run --rm ${imageName}:wildfly-8.2.1.krista22-jdk8-${imageTag} yum check-update -q | wc --lines)" -gt "3" ]]; then
              echo "doRebuild=true" >> $GITHUB_ENV
          fi

      - name: Pull old Docker image bas-8.2.1.krista45-switchyard.modeshape-jdk8
        run: |
          if docker pull ${imageName}:bas-8.2.1.krista45-switchyard.modeshape-jdk8-${imageTag}; then
              echo "oldImagePresent=true" >> $GITHUB_ENV
          else
              echo "doRebuild=true" >> $GITHUB_ENV
          fi
      - name: Check updates in image bas-8.2.1.krista45-switchyard.modeshape-jdk8
        if: env.oldImagePresent == 'true'
        run: |
          if [[ "$(docker run --rm ${imageName}:bas-8.2.1.krista45-switchyard.modeshape-jdk8-${imageTag} yum check-update -q | wc --lines)" -gt "3" ]]; then
              echo "doRebuild=true" >> $GITHUB_ENV
          fi

      - name: Pull old Docker image bas-8.2.1.krista45-switchyard-jdk8
        run: |
          if docker pull ${imageName}:bas-8.2.1.krista45-switchyard-jdk8-${imageTag}; then
              echo "oldImagePresent=true" >> $GITHUB_ENV
          else
              echo "doRebuild=true" >> $GITHUB_ENV
          fi
      - name: Check updates in image bas-8.2.1.krista45-switchyard-jdk8
        if: env.oldImagePresent == 'true'
        run: |
          if [[ "$(docker run --rm ${imageName}:bas-8.2.1.krista45-switchyard-jdk8-${imageTag} yum check-update -q | wc --lines)" -gt "3" ]]; then
              echo "doRebuild=true" >> $GITHUB_ENV
          fi

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        if: env.doRebuild == 'true'
        with:
          java-version: 1.8
          server-id: bintray-javister
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Build and Check
        if: env.doRebuild == 'true'
        run: mvn --no-transfer-progress -Dstyle.color=always verify
        env:
          MAVEN_USERNAME: ${{ secrets.BINTRAY_USER }}
          MAVEN_PASSWORD: ${{ secrets.BINTRAY_PASSWORD }}
          MAVEN_OPTS: -Djansi.force=true
      - name: Login to Bintray Javister
        if: env.doRebuild == 'true'
        run: docker login -u ${{ secrets.BINTRAY_USER }} -p ${{ secrets.BINTRAY_PASSWORD }} javister-docker-docker.bintray.io
      - name: Push Docker image
        if: env.doRebuild == 'true'
        run: mvn --no-transfer-progress -Dstyle.color=always -DforcePush -DskipTests verify
        env:
          MAVEN_USERNAME: ${{ secrets.BINTRAY_USER }}
          MAVEN_PASSWORD: ${{ secrets.BINTRAY_PASSWORD }}
          MAVEN_OPTS: -Djansi.force=true
